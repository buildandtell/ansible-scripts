server {
	listen 80;
	listen [::]:80;

	server_name {{ nginx_server_name }};
	access_log /var/log/nginx/{{ nginx_server_name }}.access.log;
	error_log /var/log/nginx/{{ nginx_server_name }}.error.log;

	{% if letsencrypt_activate %}
	location .well-known {
		root {{ letsencrypt_wellknown }};
	}

	{% if letsencrypt_https %}
	location / {
		rewrite ^(.*)$ https://{{ nginx_server_name }}$1 permanent;
	}
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name {{ nginx_server_name }};
	access_log /var/log/nginx/{{ nginx_server_name }}.access.log;
	error_log /var/log/nginx/{{ nginx_server_name }}.error.log;

	ssl on;
	ssl_certificate /etc/letsencrypt/live/{{ letsencrypt_domain }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_domain }}/privkey.pem;

	include /etc/nginx/snippets/ssl.conf;

	{% endif %}
	{% endif %}

	root {{ dokuwiki_base }};

	index doku.php;

	# Maximum file upload size is 4MB - change accordingly if needed
	client_max_body_size 4M;
	client_body_buffer_size 128k;

	{% if not dokuwiki_install %}
	location ~ /(data/|conf/|bin/|inc/|install.php) { deny all; }
	{% endif %}

	location / { try_files $uri $uri/ @dokuwiki; }

	location @dokuwiki {
		# rewrites for userewrite=1
		rewrite ^/_media/(.*) /lib/exe/fetch.php?media=$1 last;
		rewrite ^/_detail/(.*) /lib/exe/detail.php?media=$1 last;
		rewrite ^/_export/([^/]+)/(.*) /doku.php?do=export_$1&id=$2 last;
		rewrite ^/(.*) /doku.php?id=$1&$args last;
	}

	location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
		# cache static assets
		expires    max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}

	location ~ \.php$ {
		try_files $uri /doku.php;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;

		# filter and proxy PHP requests to PHP-FPM
		fastcgi_pass   unix:/var/run/php/php7.0-fpm.sock;
		fastcgi_index  index.php;
		include        fastcgi.conf;
	}
}
